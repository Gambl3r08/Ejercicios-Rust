{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3","program":"/home/gambl3r/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_retry","--edition=2018","/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=664b7c0b7ac4af67","-C","extra-filename=-664b7c0b7ac4af67","--out-dir","/home/gambl3r/Rust/telegrambotdev/BotDev/target/rls/debug/deps","-L","dependency=/home/gambl3r/Rust/telegrambotdev/BotDev/target/rls/debug/deps","--extern","futures=/home/gambl3r/Rust/telegrambotdev/BotDev/target/rls/debug/deps/libfutures-7057f15d198b6597.rmeta","--extern","tokio_timer=/home/gambl3r/Rust/telegrambotdev/BotDev/target/rls/debug/deps/libtokio_timer-2f7a568f6151ed04.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/gambl3r/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gambl3r/Rust/telegrambotdev/BotDev/target/rls/debug/deps/libfutures_retry-664b7c0b7ac4af67.rmeta"},"prelude":{"crate_id":{"name":"futures_retry","disambiguator":[13790367106442296147,1404594482215424120]},"crate_root":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src","external_crates":[{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8363989277313806732,13723635736355452392]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5755871685339259462,14524450630327408145]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6095990061662150844,17257511342173735843]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13534664360101634333,15955848543282431589]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2576337310504802494,7533979301291365915]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5114841071718684731,1147767992231475921]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14891534813972024149,13771932312545804845]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[904103305253144465,12292134317329413205]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16314738562439622889,10306027504818249940]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15843431334828571128,5286674190927770495]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17405625562201081622,10275716470817790619]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11445955052790897216,5818918092474945162]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14649202847011715524,6782578055671422766]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[7180995537586922820,7051902941398327739]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[9612987991627917998,10712864082221106628]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[17826240478786457486,5527832178130695808]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6600453779972510942,5977101663316138555]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","num":18,"id":{"name":"futures","disambiguator":[14475725271669731293,8475842128054925086]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","num":19,"id":{"name":"tokio_timer","disambiguator":[3391313690387360197,663429769820033538]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","num":20,"id":{"name":"tokio_executor","disambiguator":[4896765860507480534,7806529800039296200]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","num":21,"id":{"name":"crossbeam_utils","disambiguator":[15868943542105350585,6701065363769295109]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","num":22,"id":{"name":"cfg_if","disambiguator":[16973315671725995844,13229000032311113664]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","num":23,"id":{"name":"lazy_static","disambiguator":[10949373214698449189,8475297847177132521]}},{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","num":24,"id":{"name":"slab","disambiguator":[5268162591656699566,745019238838488434]}}],"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":0,"byte_end":4555,"line_start":1,"line_end":117,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":6},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3795,"byte_end":3807,"line_start":97,"line_end":97,"column_start":20,"column_end":32},"alias_span":null,"name":"ErrorHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":27},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3822,"byte_end":3835,"line_start":98,"line_end":98,"column_start":14,"column_end":27},"alias_span":null,"name":"FutureFactory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":35},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3837,"byte_end":3848,"line_start":98,"line_end":98,"column_start":29,"column_end":40},"alias_span":null,"name":"FutureRetry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":72},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3862,"byte_end":3871,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"alias_span":null,"name":"SinkRetry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3873,"byte_end":3885,"line_start":99,"line_end":99,"column_start":23,"column_end":35},"alias_span":null,"name":"SinkRetryExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":114},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3901,"byte_end":3912,"line_start":100,"line_end":100,"column_start":14,"column_end":25},"alias_span":null,"name":"StreamRetry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":120},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3914,"byte_end":3928,"line_start":100,"line_end":100,"column_start":27,"column_end":41},"alias_span":null,"name":"StreamRetryExt","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":0,"byte_end":4555,"line_start":1,"line_end":117,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":17},{"krate":0,"index":59},{"krate":0,"index":103},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":173},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":162},{"krate":0,"index":164}],"decl_id":null,"docs":" [![pipeline status](https://gitlab.com/mexus/futures-retry/badges/master/pipeline.svg)](https://gitlab.com/mexus/futures-retry/commits/master)\n [![crates.io](https://img.shields.io/crates/v/futures-retry.svg)](https://crates.io/crates/futures-retry)\n [![docs.rs](https://docs.rs/futures-retry/badge.svg)](https://docs.rs/futures-retry)","sig":null,"attributes":[{"value":"/ [![pipeline status](https://gitlab.com/mexus/futures-retry/badges/master/pipeline.svg)](https://gitlab.com/mexus/futures-retry/commits/master)","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":0,"byte_end":146,"line_start":1,"line_end":1,"column_start":1,"column_end":147}},{"value":"/ [![crates.io](https://img.shields.io/crates/v/futures-retry.svg)](https://crates.io/crates/futures-retry)","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":147,"byte_end":256,"line_start":2,"line_end":2,"column_start":1,"column_end":110}},{"value":"/ [![docs.rs](https://docs.rs/futures-retry/badge.svg)](https://docs.rs/futures-retry)","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":257,"byte_end":345,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":346,"byte_end":349,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [[Release docs]](https://docs.rs/futures-retry/)","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":350,"byte_end":402,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":403,"byte_end":406,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [[Master docs]](https://mexus.gitlab.io/futures-retry/futures_retry/)","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":407,"byte_end":480,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":481,"byte_end":484,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ A tool that helps you retry your future :) Well, `Future`s and `Stream`s and `Sink`s, to be","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":485,"byte_end":580,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ precise.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":581,"byte_end":593,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":594,"byte_end":597,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ It's quite a common task when you need to repeat some action if you've got an error, be it a","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":598,"byte_end":694,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ connection timeout or some temporary OS error.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":695,"byte_end":745,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":746,"byte_end":749,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ When you do stuff in a synchronous manner it's quite easy to implement the attempts logic, but","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":750,"byte_end":848,"line_start":15,"line_end":15,"column_start":1,"column_end":99}},{"value":"/ when it comes to asynchronous programming you suddenly need to write a fool load of a","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":849,"byte_end":938,"line_start":16,"line_end":16,"column_start":1,"column_end":90}},{"value":"/ boilerplate code, introduce state machines and everything.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":939,"byte_end":1001,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1002,"byte_end":1005,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This library aims to make your life easier and let you write more straightword and nice code,","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1006,"byte_end":1103,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ concentrating on buisness logic rathen than on handling all the mess.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1104,"byte_end":1177,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1178,"byte_end":1181,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ I was inspired to write this library after coming over a [`hyper`","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1182,"byte_end":1251,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/ issue](https://github.com/hyperium/hyper/issues/1358), and I came to an understanding that the","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1252,"byte_end":1350,"line_start":23,"line_end":23,"column_start":1,"column_end":99}},{"value":"/ problem is more common than I used to think.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1351,"byte_end":1399,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1400,"byte_end":1403,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ For examples have a look in the `examples/` folder in the git repo.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1404,"byte_end":1475,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1476,"byte_end":1479,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Suggestions and critiques are welcome!","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1480,"byte_end":1522,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1523,"byte_end":1526,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1527,"byte_end":1538,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"/ // ...","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1539,"byte_end":1549,"line_start":31,"line_end":31,"column_start":1,"column_end":11}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1550,"byte_end":1575,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/ # use tokio::prelude::*;","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1576,"byte_end":1604,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ # use tokio::io;","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1605,"byte_end":1625,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ # use tokio::net::{TcpListener, TcpStream};","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1626,"byte_end":1673,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1674,"byte_end":1704,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/ use futures_retry::{RetryPolicy, StreamRetryExt};","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1705,"byte_end":1758,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1759,"byte_end":1762,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // In this example we use a free function to handle errors, while in your project you have","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1763,"byte_end":1857,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ // more options: for simple cases a simple closure will do, for complex cases you might go","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1858,"byte_end":1952,"line_start":40,"line_end":40,"column_start":1,"column_end":95}},{"value":"/ // as far as implementing an `ErrorHandler` trait for a custom type with some complex logic.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":1953,"byte_end":2049,"line_start":41,"line_end":41,"column_start":1,"column_end":97}},{"value":"/ fn handle_error(e: io::Error) -> RetryPolicy<io::Error> {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2050,"byte_end":2111,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/   match e.kind() {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2112,"byte_end":2134,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/     io::ErrorKind::Interrupted => RetryPolicy::Repeat,","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2135,"byte_end":2193,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/     io::ErrorKind::PermissionDenied => RetryPolicy::ForwardError(e),","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2194,"byte_end":2266,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/     _ => RetryPolicy::WaitRetry(Duration::from_millis(5)),","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2267,"byte_end":2329,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/   }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2330,"byte_end":2337,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2338,"byte_end":2343,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2344,"byte_end":2347,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ fn serve_connection(stream: TcpStream) -> impl Future<Item = (), Error = ()> + Send {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2348,"byte_end":2437,"line_start":50,"line_end":50,"column_start":1,"column_end":90}},{"value":"/   // ...","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2438,"byte_end":2450,"line_start":51,"line_end":51,"column_start":1,"column_end":13}},{"value":"/   # future::ok(())","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2451,"byte_end":2473,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2474,"byte_end":2479,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2480,"byte_end":2483,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2484,"byte_end":2499,"line_start":55,"line_end":55,"column_start":1,"column_end":16}},{"value":"/   # let addr = \"127.0.0.1:12345\".parse().unwrap();","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2500,"byte_end":2554,"line_start":56,"line_end":56,"column_start":1,"column_end":55}},{"value":"/   let listener =TcpListener::bind(&addr).unwrap();","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2555,"byte_end":2609,"line_start":57,"line_end":57,"column_start":1,"column_end":55}},{"value":"/   let server = listener.incoming()","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2610,"byte_end":2648,"line_start":58,"line_end":58,"column_start":1,"column_end":39}},{"value":"/     .retry(handle_error) // Magic happens here","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2649,"byte_end":2699,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/     .and_then(|stream| {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2700,"byte_end":2728,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/       tokio::spawn(serve_connection(stream));","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2729,"byte_end":2778,"line_start":61,"line_end":61,"column_start":1,"column_end":50}},{"value":"/       Ok(())","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2779,"byte_end":2795,"line_start":62,"line_end":62,"column_start":1,"column_end":17}},{"value":"/     })","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2796,"byte_end":2806,"line_start":63,"line_end":63,"column_start":1,"column_end":11}},{"value":"/     .for_each(|_| Ok(()))","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2807,"byte_end":2836,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/     .map_err(|e| eprintln!(\"Caught an error {}\", e));","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2837,"byte_end":2894,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/   # // This nasty hack is required to exit immediately when running the doc tests.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2895,"byte_end":2981,"line_start":66,"line_end":66,"column_start":1,"column_end":87}},{"value":"/   # let server = future::ok(()).select(server).map(|_| ()).map_err(|_| ());","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":2982,"byte_end":3061,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/   tokio::run(server);","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3062,"byte_end":3087,"line_start":68,"line_end":68,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3088,"byte_end":3093,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3094,"byte_end":3101,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3102,"byte_end":3105,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ## License","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3106,"byte_end":3120,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3121,"byte_end":3124,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Licensed under either of","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3125,"byte_end":3153,"line_start":74,"line_end":74,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3154,"byte_end":3157,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/  * Apache License, Version 2.0 ([LICENSE-APACHE](LICENSE-APACHE) or http://www.apache.org/licenses/LICENSE-2.0)","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3158,"byte_end":3273,"line_start":76,"line_end":76,"column_start":1,"column_end":116}},{"value":"/  * MIT license ([LICENSE-MIT](LICENSE-MIT) or http://opensource.org/licenses/MIT)","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3274,"byte_end":3359,"line_start":77,"line_end":77,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3360,"byte_end":3363,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ at your option.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3364,"byte_end":3383,"line_start":79,"line_end":79,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3384,"byte_end":3387,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ### Contribution","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3388,"byte_end":3408,"line_start":81,"line_end":81,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3409,"byte_end":3412,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Unless you explicitly state otherwise, any contribution intentionally submitted","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3413,"byte_end":3496,"line_start":83,"line_end":83,"column_start":1,"column_end":84}},{"value":"/ for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3497,"byte_end":3617,"line_start":84,"line_end":84,"column_start":1,"column_end":121}},{"value":"/ additional terms or conditions.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3618,"byte_end":3653,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"deny(missing_docs)","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3655,"byte_end":3677,"line_start":87,"line_end":87,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":6},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6083,"byte_end":6095,"line_start":53,"line_end":53,"column_start":11,"column_end":23},"name":"ErrorHandler","qualname":"::error_handler::ErrorHandler","value":"ErrorHandler<InError>","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10}],"decl_id":null,"docs":" An error handler trait.","sig":null,"attributes":[{"value":"/ An error handler trait.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":4582,"byte_end":4609,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":4610,"byte_end":4613,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Please note that this trait is implemented for any `FnMut` closure with a compatible signature,","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":4614,"byte_end":4713,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ so for some simple cases you might simply use a closure instead of creating your own type and","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":4714,"byte_end":4811,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ implementing this trait for it.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":4812,"byte_end":4847,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":4848,"byte_end":4851,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Here's an example of an error handler that counts *consecutive* error attempts.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":4852,"byte_end":4935,"line_start":9,"line_end":9,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":4936,"byte_end":4939,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":4940,"byte_end":4947,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use futures_retry::{ErrorHandler, RetryPolicy};","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":4948,"byte_end":4999,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5000,"byte_end":5016,"line_start":13,"line_end":13,"column_start":1,"column_end":17}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5017,"byte_end":5045,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5046,"byte_end":5049,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ pub struct CustomHandler {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5050,"byte_end":5080,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/     attempt: usize,","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5081,"byte_end":5104,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"/     max_attempts: usize,","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5105,"byte_end":5133,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5134,"byte_end":5139,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5140,"byte_end":5143,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ impl CustomHandler {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5144,"byte_end":5168,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/     pub fn new(attempts: usize) -> Self {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5169,"byte_end":5214,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/         Self {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5215,"byte_end":5233,"line_start":23,"line_end":23,"column_start":1,"column_end":19}},{"value":"/             attempt: 0,","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5234,"byte_end":5261,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/             max_attempts: attempts,","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5262,"byte_end":5301,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/         }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5302,"byte_end":5315,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5316,"byte_end":5325,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5326,"byte_end":5331,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5332,"byte_end":5335,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ impl ErrorHandler<io::Error> for CustomHandler {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5336,"byte_end":5388,"line_start":30,"line_end":30,"column_start":1,"column_end":53}},{"value":"/     type OutError = io::Error;","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5389,"byte_end":5423,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5424,"byte_end":5427,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, e: io::Error) -> RetryPolicy<io::Error> {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5428,"byte_end":5498,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/         if self.attempt == self.max_attempts {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5499,"byte_end":5549,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"/             eprintln!(\"No attempts left\");","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5550,"byte_end":5596,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/             return RetryPolicy::ForwardError(e);","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5597,"byte_end":5649,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5650,"byte_end":5663,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/         self.attempt += 1;","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5664,"byte_end":5694,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/         match e.kind() {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5695,"byte_end":5723,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/             io::ErrorKind::ConnectionRefused => RetryPolicy::WaitRetry(Duration::from_secs(1)),","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5724,"byte_end":5823,"line_start":40,"line_end":40,"column_start":1,"column_end":100}},{"value":"/             io::ErrorKind::TimedOut => RetryPolicy::Repeat,","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5824,"byte_end":5887,"line_start":41,"line_end":41,"column_start":1,"column_end":64}},{"value":"/             _ => RetryPolicy::ForwardError(e),","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5888,"byte_end":5938,"line_start":42,"line_end":42,"column_start":1,"column_end":51}},{"value":"/         }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5939,"byte_end":5952,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5953,"byte_end":5962,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5963,"byte_end":5966,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     fn ok(&mut self) {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5967,"byte_end":5993,"line_start":46,"line_end":46,"column_start":1,"column_end":27}},{"value":"/         self.attempt = 0;","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":5994,"byte_end":6023,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6024,"byte_end":6033,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6034,"byte_end":6039,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6040,"byte_end":6045,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6046,"byte_end":6064,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6065,"byte_end":6072,"line_start":52,"line_end":52,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":8},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6174,"byte_end":6182,"line_start":55,"line_end":55,"column_start":10,"column_end":18},"name":"OutError","qualname":"::error_handler::ErrorHandler::OutError","value":"type OutError;","parent":{"krate":0,"index":6},"children":[],"decl_id":null,"docs":" An error that the `handle` function will produce.\n","sig":null,"attributes":[{"value":"/ An error that the `handle` function will produce.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6111,"byte_end":6164,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6344,"byte_end":6350,"line_start":61,"line_end":61,"column_start":8,"column_end":14},"name":"handle","qualname":"::error_handler::ErrorHandler::handle","value":"pub fn handle(&mut Self, InError) -> RetryPolicy<Self::OutError>","parent":{"krate":0,"index":6},"children":[],"decl_id":null,"docs":" Handles an error.","sig":null,"attributes":[{"value":"/ Handles an error.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6189,"byte_end":6210,"line_start":57,"line_end":57,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6215,"byte_end":6218,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Refer to the [`RetryPolicy`](enum.RetryPolicy.html) type to understand what this method","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6223,"byte_end":6314,"line_start":59,"line_end":59,"column_start":5,"column_end":96}},{"value":"/ might return.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6319,"byte_end":6336,"line_start":60,"line_end":60,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6711,"byte_end":6713,"line_start":70,"line_end":70,"column_start":8,"column_end":10},"name":"ok","qualname":"::error_handler::ErrorHandler::ok","value":"pub fn ok(&mut Self)","parent":{"krate":0,"index":6},"children":[],"decl_id":null,"docs":" This method is called on a successful execution (before returning an item) of the underlying\n future/stream.","sig":null,"attributes":[{"value":"/ This method is called on a successful execution (before returning an item) of the underlying","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6411,"byte_end":6507,"line_start":63,"line_end":63,"column_start":5,"column_end":101}},{"value":"/ future/stream.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6512,"byte_end":6530,"line_start":64,"line_end":64,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6535,"byte_end":6538,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ One can use this method to reset an internal state, like a consecutive errors counter for","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6543,"byte_end":6636,"line_start":66,"line_end":66,"column_start":5,"column_end":98}},{"value":"/ example.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6641,"byte_end":6653,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6658,"byte_end":6661,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ By default the method is a no-op.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6666,"byte_end":6703,"line_start":69,"line_end":69,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":27},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":7513,"byte_end":7526,"line_start":13,"line_end":13,"column_start":11,"column_end":24},"name":"FutureFactory","qualname":"::future::FutureFactory","value":"FutureFactory","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"decl_id":null,"docs":" A factory trait used to create futures.","sig":null,"attributes":[{"value":"/ A factory trait used to create futures.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":7082,"byte_end":7125,"line_start":6,"line_end":6,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":7126,"byte_end":7129,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ We need a factory for the retry logic because when (and if) a future returns an error, its","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":7130,"byte_end":7224,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/ internal state is undefined and we can't poll on it anymore. Hence we need to create a new one.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":7225,"byte_end":7324,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":7325,"byte_end":7328,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ By the way, this trait is implemented for any closure that returns a `Future`, so you don't","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":7329,"byte_end":7424,"line_start":11,"line_end":11,"column_start":1,"column_end":96}},{"value":"/ have to write your own type and implement it to handle some simple cases.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":7425,"byte_end":7502,"line_start":12,"line_end":12,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":28},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":7598,"byte_end":7608,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"FutureItem","qualname":"::future::FutureFactory::FutureItem","value":"type FutureItem: Future;","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" An future type that is created by the `new` method.\n","sig":null,"attributes":[{"value":"/ An future type that is created by the `new` method.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":7533,"byte_end":7588,"line_start":14,"line_end":14,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":7748,"byte_end":7751,"line_start":19,"line_end":19,"column_start":8,"column_end":11},"name":"new","qualname":"::future::FutureFactory::new","value":"pub fn new(&mut Self) -> Self::FutureItem","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Creates a new future. We don't need the factory to be immutable so we pass `self` as a\n mutable reference.\n","sig":null,"attributes":[{"value":"/ Creates a new future. We don't need the factory to be immutable so we pass `self` as a","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":7623,"byte_end":7713,"line_start":17,"line_end":17,"column_start":5,"column_end":95}},{"value":"/ mutable reference.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":7718,"byte_end":7740,"line_start":18,"line_end":18,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":35},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8369,"byte_end":8380,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"FutureRetry","qualname":"::future::FutureRetry","value":"FutureRetry {  }","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40}],"decl_id":null,"docs":" A future that transparently launches an underlying future (created by a provided factory each\n time) as many times as needed to get things done.","sig":null,"attributes":[{"value":"/ A future that transparently launches an underlying future (created by a provided factory each","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":7982,"byte_end":8079,"line_start":35,"line_end":35,"column_start":1,"column_end":98}},{"value":"/ time) as many times as needed to get things done.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8080,"byte_end":8133,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8134,"byte_end":8137,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ It is useful fot situations when you need to make several attempts, e.g. for establishing","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8138,"byte_end":8231,"line_start":38,"line_end":38,"column_start":1,"column_end":94}},{"value":"/ connections, RPC calls.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8232,"byte_end":8259,"line_start":39,"line_end":39,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8260,"byte_end":8263,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ There is also a type to handle `Stream` errors: [`StreamRetry`](struct.StreamRetry.html).","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8264,"byte_end":8357,"line_start":41,"line_end":41,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":9244,"byte_end":9247,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<FutureRetry<F, R>>::new","value":"pub fn new(F, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `FutureRetry` using a provided factory and an object of `ErrorHandler` type that\n decides on a retry-policy depending on an encountered error.","sig":null,"attributes":[{"value":"/ Creates a `FutureRetry` using a provided factory and an object of `ErrorHandler` type that","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8631,"byte_end":8725,"line_start":57,"line_end":57,"column_start":5,"column_end":99}},{"value":"/ decides on a retry-policy depending on an encountered error.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8730,"byte_end":8794,"line_start":58,"line_end":58,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8799,"byte_end":8802,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Please refer to the `tcp-client` example in the `examples` folder to have a look at a","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8807,"byte_end":8896,"line_start":60,"line_end":60,"column_start":5,"column_end":94}},{"value":"/ possible usage.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8901,"byte_end":8920,"line_start":61,"line_end":61,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8925,"byte_end":8928,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8933,"byte_end":8948,"line_start":63,"line_end":63,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8953,"byte_end":8956,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ * `factory`: a factory that creates futures,","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8961,"byte_end":9009,"line_start":65,"line_end":65,"column_start":5,"column_end":53}},{"value":"/ * `error_action`: a type that handles an error and decides which route to take: simply","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":9014,"byte_end":9104,"line_start":66,"line_end":66,"column_start":5,"column_end":95}},{"value":"/                   try again, wait and then try, or give up (on a critical error for","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":9109,"byte_end":9196,"line_start":67,"line_end":67,"column_start":5,"column_end":92}},{"value":"/                   exapmle).","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":9201,"byte_end":9232,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":72},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":14216,"byte_end":14225,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"SinkRetry","qualname":"::sink::SinkRetry","value":"SinkRetry {  }","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77}],"decl_id":null,"docs":" Provides a way to handle errors during a `Sink` execution, i.e. it gives you an ability to\n flush item's with delay.","sig":null,"attributes":[{"value":"/ Provides a way to handle errors during a `Sink` execution, i.e. it gives you an ability to","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":13277,"byte_end":13371,"line_start":6,"line_end":6,"column_start":1,"column_end":95}},{"value":"/ flush item's with delay.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":13372,"byte_end":13400,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":13401,"byte_end":13404,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type is similar to [`StreamRetry`](struct.StreamRetry.html). The diffrence is that","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":13405,"byte_end":13496,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/ SinkRetry is more limited:","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":13497,"byte_end":13527,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ * SinkItem has to implement `Clone` trait.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":13528,"byte_end":13574,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"/ * error_action `OutError` has to implement `From<SinkError>` trait.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":13575,"byte_end":13646,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":13647,"byte_end":13650,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A `fs-readwrite` example is available in the `examples` folder.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":13651,"byte_end":13718,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ A `tcp-copy` example handle StreamRetry and SinkRetry example at once.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":13719,"byte_end":13793,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":13794,"byte_end":13797,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ A typical usage might be recovering from errors when flushing data to I/O.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":13798,"byte_end":13876,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":13877,"byte_end":13880,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Warning (Implementation details)","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":13881,"byte_end":13919,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":13920,"byte_end":13923,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ It depends from inner sink what happen when inner `start_send()` is resolve to error. This","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":13924,"byte_end":14018,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/ function assume that error has the same meaning as `AsyncSink::NotReady`. If your item will","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":14019,"byte_end":14114,"line_start":22,"line_end":22,"column_start":1,"column_end":96}},{"value":"/ be buffered before error was returned - SinkRetry will insert this item again anyway.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":14115,"byte_end":14204,"line_start":23,"line_end":23,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":15019,"byte_end":15022,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<SinkRetry<F, S>>::new","value":"pub fn new(S, F) -> Self where S: Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SinkRetry` using a provided sink and an object of `ErrorHandler` type that\n decides on a retry-policy depending on an encountered error.","sig":null,"attributes":[{"value":"/ Creates a `SinkRetry` using a provided sink and an object of `ErrorHandler` type that","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":14442,"byte_end":14531,"line_start":37,"line_end":37,"column_start":5,"column_end":94}},{"value":"/ decides on a retry-policy depending on an encountered error.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":14536,"byte_end":14600,"line_start":38,"line_end":38,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":14605,"byte_end":14608,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":14613,"byte_end":14628,"line_start":40,"line_end":40,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":14633,"byte_end":14636,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ * `sink`: a sink to be filled,","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":14641,"byte_end":14675,"line_start":42,"line_end":42,"column_start":5,"column_end":39}},{"value":"/ * `error_action`: a type that handles an error and decides which route to take: simply","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":14680,"byte_end":14770,"line_start":43,"line_end":43,"column_start":5,"column_end":95}},{"value":"/                   try again, wait and then try, or give up (on a critical error for","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":14775,"byte_end":14862,"line_start":44,"line_end":44,"column_start":5,"column_end":92}},{"value":"/                   exapmle).","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":14867,"byte_end":14898,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/ # Notes","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":14903,"byte_end":14914,"line_start":46,"line_end":46,"column_start":5,"column_end":16}},{"value":"/ More common use is in like chain manner. See [SinkRetryExt](trait.SinkRetryExt.html)","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":14919,"byte_end":15007,"line_start":47,"line_end":47,"column_start":5,"column_end":93}}]},{"kind":"Trait","id":{"krate":0,"index":83},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19272,"byte_end":19284,"line_start":155,"line_end":155,"column_start":11,"column_end":23},"name":"SinkRetryExt","qualname":"::sink::SinkRetryExt","value":"SinkRetryExt: Sink","parent":null,"children":[{"krate":0,"index":84}],"decl_id":null,"docs":" An extention trait for `Sink` which allows to use `SinkRetry` in a chain-like manner.","sig":null,"attributes":[{"value":"/ An extention trait for `Sink` which allows to use `SinkRetry` in a chain-like manner.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":16669,"byte_end":16758,"line_start":92,"line_end":92,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":16759,"byte_end":16762,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":16763,"byte_end":16776,"line_start":94,"line_end":94,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":16777,"byte_end":16780,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ This magic trait allows you to handle errors on sink in a very neat manner:","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":16781,"byte_end":16860,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":16861,"byte_end":16868,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ # use futures_retry::{RetryPolicy, SinkRetryExt, StreamRetryExt};","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":16869,"byte_end":16938,"line_start":98,"line_end":98,"column_start":1,"column_end":70}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":16939,"byte_end":16969,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/ # use tokio::io;","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":16970,"byte_end":16990,"line_start":100,"line_end":100,"column_start":1,"column_end":21}},{"value":"/ # use tokio::net::TcpListener;","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":16991,"byte_end":17025,"line_start":101,"line_end":101,"column_start":1,"column_end":35}},{"value":"/ # use tokio::prelude::*;","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17026,"byte_end":17054,"line_start":102,"line_end":102,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17055,"byte_end":17058,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17059,"byte_end":17074,"line_start":104,"line_end":104,"column_start":1,"column_end":16}},{"value":"/      let addr = \"127.0.0.1:12345\".parse().unwrap();","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17075,"byte_end":17130,"line_start":105,"line_end":105,"column_start":1,"column_end":56}},{"value":"/      let tcp = TcpListener::bind(&addr).unwrap();","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17131,"byte_end":17184,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17185,"byte_end":17188,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/     let conn_error_handler = |e: io::Error| match e.kind() {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17189,"byte_end":17253,"line_start":108,"line_end":108,"column_start":1,"column_end":65}},{"value":"/         io::ErrorKind::Interrupted","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17254,"byte_end":17292,"line_start":109,"line_end":109,"column_start":1,"column_end":39}},{"value":"/         | io::ErrorKind::ConnectionRefused","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17293,"byte_end":17339,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/         | io::ErrorKind::ConnectionReset","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17340,"byte_end":17384,"line_start":111,"line_end":111,"column_start":1,"column_end":45}},{"value":"/         | io::ErrorKind::ConnectionAborted","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17385,"byte_end":17431,"line_start":112,"line_end":112,"column_start":1,"column_end":47}},{"value":"/         | io::ErrorKind::NotConnected","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17432,"byte_end":17473,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/         | io::ErrorKind::BrokenPipe => RetryPolicy::Repeat,","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17474,"byte_end":17537,"line_start":114,"line_end":114,"column_start":1,"column_end":64}},{"value":"/         io::ErrorKind::PermissionDenied => RetryPolicy::ForwardError(e),","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17538,"byte_end":17614,"line_start":115,"line_end":115,"column_start":1,"column_end":77}},{"value":"/         _ => RetryPolicy::WaitRetry(Duration::from_millis(5)),","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17615,"byte_end":17681,"line_start":116,"line_end":116,"column_start":1,"column_end":67}},{"value":"/     };","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17682,"byte_end":17692,"line_start":117,"line_end":117,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17693,"byte_end":17696,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/     let data_sending_error_handler = |e: io::Error| match e.kind() {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17697,"byte_end":17769,"line_start":119,"line_end":119,"column_start":1,"column_end":73}},{"value":"/         io::ErrorKind::Interrupted => RetryPolicy::Repeat,","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17770,"byte_end":17832,"line_start":120,"line_end":120,"column_start":1,"column_end":63}},{"value":"/         io::ErrorKind::TimedOut | io::ErrorKind::InvalidInput | io::ErrorKind::InvalidData => {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17833,"byte_end":17932,"line_start":121,"line_end":121,"column_start":1,"column_end":100}},{"value":"/             RetryPolicy::WaitRetry(Duration::from_millis(5))","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17933,"byte_end":17997,"line_start":122,"line_end":122,"column_start":1,"column_end":65}},{"value":"/         }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":17998,"byte_end":18011,"line_start":123,"line_end":123,"column_start":1,"column_end":14}},{"value":"/         _ => RetryPolicy::ForwardError(e),","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18012,"byte_end":18058,"line_start":124,"line_end":124,"column_start":1,"column_end":47}},{"value":"/     };","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18059,"byte_end":18069,"line_start":125,"line_end":125,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18070,"byte_end":18073,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/     let server = tcp","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18074,"byte_end":18098,"line_start":127,"line_end":127,"column_start":1,"column_end":25}},{"value":"/         .incoming()","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18099,"byte_end":18122,"line_start":128,"line_end":128,"column_start":1,"column_end":24}},{"value":"/         .retry(conn_error_handler)","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18123,"byte_end":18161,"line_start":129,"line_end":129,"column_start":1,"column_end":39}},{"value":"/         .for_each(move |tcp| {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18162,"byte_end":18196,"line_start":130,"line_end":130,"column_start":1,"column_end":35}},{"value":"/             let (reader, writer) = tcp.split();","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18197,"byte_end":18248,"line_start":131,"line_end":131,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18249,"byte_end":18252,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/             let reader = tokio::codec::FramedRead::new(reader, tokio::codec::LinesCodec::new());","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18253,"byte_end":18353,"line_start":133,"line_end":133,"column_start":1,"column_end":101}},{"value":"/             let writer = tokio::codec::FramedWrite::new(writer, tokio::codec::LinesCodec::new());","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18354,"byte_end":18455,"line_start":134,"line_end":134,"column_start":1,"column_end":102}},{"value":"/             // Copy the data back to the client","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18456,"byte_end":18507,"line_start":135,"line_end":135,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18508,"byte_end":18511,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/             let conn = writer","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18512,"byte_end":18545,"line_start":137,"line_end":137,"column_start":1,"column_end":34}},{"value":"/                 .retry(data_sending_error_handler) // retry","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18546,"byte_end":18609,"line_start":138,"line_end":138,"column_start":1,"column_end":64}},{"value":"/                 .send_all(reader.retry(data_sending_error_handler))","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18610,"byte_end":18681,"line_start":139,"line_end":139,"column_start":1,"column_end":72}},{"value":"/                 // when future is resolved sink and stream is returned we just drop them.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18682,"byte_end":18775,"line_start":140,"line_end":140,"column_start":1,"column_end":94}},{"value":"/                 .map(drop)","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18776,"byte_end":18806,"line_start":141,"line_end":141,"column_start":1,"column_end":31}},{"value":"/                 // Handle any errors","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18807,"byte_end":18847,"line_start":142,"line_end":142,"column_start":1,"column_end":41}},{"value":"/                 .map_err(|err| eprintln!(\"Can't copy data: IO error {:?}\", err));","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18848,"byte_end":18933,"line_start":143,"line_end":143,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18934,"byte_end":18937,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/             // Spawn the future as a concurrent task","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18938,"byte_end":18994,"line_start":145,"line_end":145,"column_start":1,"column_end":57}},{"value":"/             tokio::spawn(conn);","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":18995,"byte_end":19030,"line_start":146,"line_end":146,"column_start":1,"column_end":36}},{"value":"/             Ok(())","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19031,"byte_end":19053,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/         })","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19054,"byte_end":19068,"line_start":148,"line_end":148,"column_start":1,"column_end":15}},{"value":"/         .map_err(|err| {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19069,"byte_end":19097,"line_start":149,"line_end":149,"column_start":1,"column_end":29}},{"value":"/             eprintln!(\"server error {:?}\", err);","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19098,"byte_end":19150,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/         });","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19151,"byte_end":19166,"line_start":151,"line_end":151,"column_start":1,"column_end":16}},{"value":"/     tokio::run(server.select(Ok(())).map(|(_, _)| ()).map_err(|(_, _)| ()));","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19167,"byte_end":19247,"line_start":152,"line_end":152,"column_start":1,"column_end":81}},{"value":"/ }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19248,"byte_end":19253,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19254,"byte_end":19261,"line_start":154,"line_end":154,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19735,"byte_end":19740,"line_start":163,"line_end":163,"column_start":8,"column_end":13},"name":"retry","qualname":"::sink::SinkRetryExt::retry","value":"pub fn retry<F>(Self, F) -> SinkRetry<F, Self> where Self: Sized,\nF: ErrorHandler<Self::SinkError>, Self::SinkItem: Clone,\nF: ErrorHandler<Self::SinkError>, F::OutError: From<Self::SinkError>","parent":{"krate":0,"index":83},"children":[],"decl_id":null,"docs":" Converts the sink into a **retry sink**. See `SinkRetry::new` for details.","sig":null,"attributes":[{"value":"/ Converts the sink into a **retry sink**. See `SinkRetry::new` for details.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19297,"byte_end":19375,"line_start":156,"line_end":156,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19380,"byte_end":19383,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Warning (Implementation details)","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19388,"byte_end":19426,"line_start":158,"line_end":158,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19431,"byte_end":19434,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ It depends from inner sink what happen when inner `start_send()` is resolve to error. This","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19439,"byte_end":19533,"line_start":160,"line_end":160,"column_start":5,"column_end":99}},{"value":"/ function assume that error has the same meaning as `AsyncSink::NotReady`. If your item will","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19538,"byte_end":19633,"line_start":161,"line_end":161,"column_start":5,"column_end":100}},{"value":"/ be buffered before error was returned - SinkRetry will insert this item again anyway.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19638,"byte_end":19727,"line_start":162,"line_end":162,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":114},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26595,"byte_end":26606,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"StreamRetry","qualname":"::stream::StreamRetry","value":"StreamRetry {  }","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"decl_id":null,"docs":" Provides a way to handle errors during a `Stream` execution, i.e. it gives you an ability to\n poll for future stream's items with a delay.","sig":null,"attributes":[{"value":"/ Provides a way to handle errors during a `Stream` execution, i.e. it gives you an ability to","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":25756,"byte_end":25852,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"/ poll for future stream's items with a delay.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":25853,"byte_end":25901,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":25902,"byte_end":25905,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type is similar to [`FutureRetry`](struct.FutureRetry.html), but with a different","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":25906,"byte_end":25996,"line_start":9,"line_end":9,"column_start":1,"column_end":91}},{"value":"/ semantics. For example, if for [`FutureRetry`](struct.FutureRetry.html) we need a factory that","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":25997,"byte_end":26095,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/ creates `Future`s, we don't need one for `Stream`s, since `Stream` itself is a natural producer","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26096,"byte_end":26195,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"/ of new items, so we don't have to recreated it if an error is encountered.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26196,"byte_end":26274,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26275,"byte_end":26278,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A typical usage might be recovering from connection errors while trying to accept a connection","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26279,"byte_end":26377,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"/ on a TCP server.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26378,"byte_end":26398,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26399,"byte_end":26402,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ A `tcp-listener` example is available in the `examples` folder.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26403,"byte_end":26470,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26471,"byte_end":26474,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Also have a look at [`StreamRetryExt`](trait.StreamRetryExt.html) trait for a more convenient","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26475,"byte_end":26572,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ usage.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26573,"byte_end":26583,"line_start":20,"line_end":20,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":120},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28068,"byte_end":28082,"line_start":70,"line_end":70,"column_start":11,"column_end":25},"name":"StreamRetryExt","qualname":"::stream::StreamRetryExt","value":"StreamRetryExt: Stream","parent":null,"children":[{"krate":0,"index":121}],"decl_id":null,"docs":" An extention trait for `Stream` which allows to use `StreamRetry` in a chain-like manner.","sig":null,"attributes":[{"value":"/ An extention trait for `Stream` which allows to use `StreamRetry` in a chain-like manner.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26677,"byte_end":26770,"line_start":27,"line_end":27,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26771,"byte_end":26774,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26775,"byte_end":26788,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26789,"byte_end":26792,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This magic trait allows you to handle errors on streams in a very neat manner:","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26793,"byte_end":26875,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26876,"byte_end":26879,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26880,"byte_end":26887,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26888,"byte_end":26898,"line_start":34,"line_end":34,"column_start":1,"column_end":11}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26899,"byte_end":26924,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/ use futures_retry::{RetryPolicy, StreamRetryExt};","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26925,"byte_end":26978,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/ # use std::io;","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26979,"byte_end":26997,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":26998,"byte_end":27028,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ # use tokio::net::{TcpListener, TcpStream};","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27029,"byte_end":27076,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ # use tokio::prelude::*;","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27077,"byte_end":27105,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27106,"byte_end":27109,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ fn handle_error(e: io::Error) -> RetryPolicy<io::Error> {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27110,"byte_end":27171,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/   match e.kind() {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27172,"byte_end":27194,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/     io::ErrorKind::Interrupted => RetryPolicy::Repeat,","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27195,"byte_end":27253,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/     io::ErrorKind::PermissionDenied => RetryPolicy::ForwardError(e),","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27254,"byte_end":27326,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/     _ => RetryPolicy::WaitRetry(Duration::from_millis(5)),","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27327,"byte_end":27389,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/   }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27390,"byte_end":27397,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27398,"byte_end":27403,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27404,"byte_end":27407,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ fn serve_connection(stream: TcpStream) -> impl Future<Item = (), Error = ()> + Send {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27408,"byte_end":27497,"line_start":50,"line_end":50,"column_start":1,"column_end":90}},{"value":"/   // ...","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27498,"byte_end":27510,"line_start":51,"line_end":51,"column_start":1,"column_end":13}},{"value":"/   # future::result(Ok(()))","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27511,"byte_end":27541,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27542,"byte_end":27547,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27548,"byte_end":27551,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27552,"byte_end":27567,"line_start":55,"line_end":55,"column_start":1,"column_end":16}},{"value":"/   let listener: TcpListener = // ...","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27568,"byte_end":27608,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/   # TcpListener::bind(&\"[::]:0\".parse().unwrap()).unwrap();","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27609,"byte_end":27672,"line_start":57,"line_end":57,"column_start":1,"column_end":64}},{"value":"/   let server = listener.incoming()","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27673,"byte_end":27711,"line_start":58,"line_end":58,"column_start":1,"column_end":39}},{"value":"/     .retry(handle_error)","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27712,"byte_end":27740,"line_start":59,"line_end":59,"column_start":1,"column_end":29}},{"value":"/     .and_then(|stream| {","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27741,"byte_end":27769,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/       tokio::spawn(serve_connection(stream));","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27770,"byte_end":27819,"line_start":61,"line_end":61,"column_start":1,"column_end":50}},{"value":"/       Ok(())","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27820,"byte_end":27836,"line_start":62,"line_end":62,"column_start":1,"column_end":17}},{"value":"/     })","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27837,"byte_end":27847,"line_start":63,"line_end":63,"column_start":1,"column_end":11}},{"value":"/     .for_each(|_| Ok(()))","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27848,"byte_end":27877,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/     .map_err(|e| eprintln!(\"Caught an error {}\", e));","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27878,"byte_end":27935,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/   # let server = server.select(Ok(())).map(|(_, _)| ()).map_err(|(_, _)| ());","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":27936,"byte_end":28017,"line_start":66,"line_end":66,"column_start":1,"column_end":82}},{"value":"/   tokio::run(server);","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28018,"byte_end":28043,"line_start":67,"line_end":67,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28044,"byte_end":28049,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28050,"byte_end":28057,"line_start":69,"line_end":69,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28189,"byte_end":28194,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"retry","qualname":"::stream::StreamRetryExt::retry","value":"pub fn retry<F>(Self, F) -> StreamRetry<F, Self> where Self: Sized","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the stream into a **retry stream**. See `StreamRetry::new` for details.\n","sig":null,"attributes":[{"value":"/ Converts the stream into a **retry stream**. See `StreamRetry::new` for details.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28097,"byte_end":28181,"line_start":71,"line_end":71,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":29209,"byte_end":29212,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamRetry<F, S>>::new","value":"pub fn new(S, F) -> Self where S: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a `StreamRetry` using a provided stream and an object of `ErrorHandler` type that\n decides on a retry-policy depending on an encountered error.","sig":null,"attributes":[{"value":"/ Creates a `StreamRetry` using a provided stream and an object of `ErrorHandler` type that","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28508,"byte_end":28601,"line_start":88,"line_end":88,"column_start":5,"column_end":98}},{"value":"/ decides on a retry-policy depending on an encountered error.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28606,"byte_end":28670,"line_start":89,"line_end":89,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28675,"byte_end":28678,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Please refer to the `tcp-listener` example in the `examples` folder to have a look at a","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28683,"byte_end":28774,"line_start":91,"line_end":91,"column_start":5,"column_end":96}},{"value":"/ possible usage or to a very convenient extension trait","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28779,"byte_end":28837,"line_start":92,"line_end":92,"column_start":5,"column_end":63}},{"value":"/ [`StreamRetryExt`](trait.StreamRetryExt.html).","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28842,"byte_end":28892,"line_start":93,"line_end":93,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28897,"byte_end":28900,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28905,"byte_end":28920,"line_start":95,"line_end":95,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28925,"byte_end":28928,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ * `stream`: a stream of future items,","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28933,"byte_end":28974,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ * `error_action`: a type that handles an error and decides which route to take: simply","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28979,"byte_end":29069,"line_start":98,"line_end":98,"column_start":5,"column_end":95}},{"value":"/                   try again, wait and then try, or give up (on a critical error for","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":29074,"byte_end":29161,"line_start":99,"line_end":99,"column_start":5,"column_end":92}},{"value":"/                   exapmle).","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":29166,"byte_end":29197,"line_start":100,"line_end":100,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":154},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":4359,"byte_end":4365,"line_start":112,"line_end":112,"column_start":5,"column_end":11},"name":"Repeat","qualname":"::RetryPolicy::Repeat","value":"RetryPolicy::Repeat","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Create and poll a new future immediately.","sig":null,"attributes":[{"value":"/ Create and poll a new future immediately.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":4095,"byte_end":4140,"line_start":106,"line_end":106,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":4145,"byte_end":4148,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Be careful!","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":4153,"byte_end":4170,"line_start":108,"line_end":108,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":4175,"byte_end":4178,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Please be careful when using this variant since it might lead to a high (actually 100%) CPU","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":4183,"byte_end":4278,"line_start":110,"line_end":110,"column_start":5,"column_end":100}},{"value":"/ usage in case a future instantly resolves into an error every time.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":4283,"byte_end":4354,"line_start":111,"line_end":111,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":156},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":4436,"byte_end":4445,"line_start":114,"line_end":114,"column_start":5,"column_end":14},"name":"WaitRetry","qualname":"::RetryPolicy::WaitRetry","value":"RetryPolicy::WaitRetry(Duration)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Wait for a given duration and make another attempt then.\n","sig":null,"attributes":[{"value":"/ Wait for a given duration and make another attempt then.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":4371,"byte_end":4431,"line_start":113,"line_end":113,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":159},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":4537,"byte_end":4549,"line_start":116,"line_end":116,"column_start":5,"column_end":17},"name":"ForwardError","qualname":"::RetryPolicy::ForwardError","value":"RetryPolicy::ForwardError(E)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Don't give it another try, just pass the error further to the user.\n","sig":null,"attributes":[{"value":"/ Don't give it another try, just pass the error further to the user.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":4461,"byte_end":4532,"line_start":115,"line_end":115,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":152},"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":4074,"byte_end":4085,"line_start":105,"line_end":105,"column_start":10,"column_end":21},"name":"RetryPolicy","qualname":"::RetryPolicy","value":"pub enum RetryPolicy<E> {\n\n    /// Create and poll a new future immediately.\n    ///\n    /// # Be careful!\n    ///\n    /// Please be careful when using this variant since it might lead to a high (actually 100%) CPU\n    /// usage in case a future instantly resolves into an error every time.\n    Repeat,\n\n    /// Wait for a given duration and make another attempt then.\n    WaitRetry(Duration),\n\n    /// Don't give it another try, just pass the error further to the user.\n    ForwardError(E),\n}","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":159}],"decl_id":null,"docs":" What to do when a future returns an error. Used in `FutureRetry::new` and `StreamRetry::new`.\n","sig":null,"attributes":[{"value":"/ What to do when a future returns an error. Used in `FutureRetry::new` and `StreamRetry::new`.","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/lib.rs","byte_start":3935,"byte_end":4032,"line_start":103,"line_end":103,"column_start":1,"column_end":98}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6784,"byte_end":6785,"line_start":73,"line_end":73,"column_start":54,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":7816,"byte_end":7817,"line_start":22,"line_end":22,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8607,"byte_end":8618,"line_start":56,"line_end":56,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":9518,"byte_end":9529,"line_start":79,"line_end":79,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":14305,"byte_end":14314,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":20070,"byte_end":20071,"line_start":175,"line_end":175,"column_start":34,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":20172,"byte_end":20182,"line_start":181,"line_end":181,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":20375,"byte_end":20384,"line_start":191,"line_end":191,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28371,"byte_end":28372,"line_start":80,"line_end":80,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28484,"byte_end":28495,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":29435,"byte_end":29446,"line_start":113,"line_end":113,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/error_handler.rs","byte_start":6784,"byte_end":6785,"line_start":73,"line_end":73,"column_start":54,"column_end":55},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":13},"to":{"krate":0,"index":6}},{"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":7816,"byte_end":7817,"line_start":22,"line_end":22,"column_start":30,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":31},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":8607,"byte_end":8618,"line_start":56,"line_end":56,"column_start":27,"column_end":38},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/future.rs","byte_start":9518,"byte_end":9529,"line_start":79,"line_end":79,"column_start":38,"column_end":49},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":35},"to":{"krate":18,"index":468}},{"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":14305,"byte_end":14314,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":72},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":19286,"byte_end":19290,"line_start":155,"line_end":155,"column_start":25,"column_end":29},"kind":"SuperTrait","from":{"krate":18,"index":1784},"to":{"krate":0,"index":83}},{"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":20070,"byte_end":20071,"line_start":175,"line_end":175,"column_start":34,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":87},"to":{"krate":0,"index":83}},{"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":20172,"byte_end":20182,"line_start":181,"line_end":181,"column_start":6,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/sink.rs","byte_start":20375,"byte_end":20384,"line_start":191,"line_end":191,"column_start":21,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":72},"to":{"krate":18,"index":1784}},{"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28084,"byte_end":28090,"line_start":70,"line_end":70,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":18,"index":1430},"to":{"krate":0,"index":120}},{"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28371,"byte_end":28372,"line_start":80,"line_end":80,"column_start":36,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":124},"to":{"krate":0,"index":120}},{"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":28484,"byte_end":28495,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gambl3r/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-retry-0.3.3/src/stream.rs","byte_start":29435,"byte_end":29446,"line_start":113,"line_end":113,"column_start":23,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":114},"to":{"krate":18,"index":1430}}]}